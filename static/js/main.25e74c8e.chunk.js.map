{"version":3,"sources":["components/Board/BoardScore.js","components/Board/BoardRow.js","store/actions/app.js","store/constants/index.js","components/Board/BoardCell.js","store/actions/board.js","components/Board/index.js","components/Button/index.js","App.js","store/reducers/app.js","store/reducers/board.js","store/reducers/index.js","store/epics/board/internal/to2DArray.js","store/epics/board/internal/verticalArray.js","store/epics/board/internal/diagonalArray.js","store/epics/board/internal/checkBingo.js","store/epics/index.js","store/epics/board/onBoard.js","store/epics/board/onCell.js","store/epics/board/onBingo.js","store/epics/board/onResult.js","store/index.js","index.js"],"names":["BoardScore","_this$props","this","props","name","bingo","console","log","_this$props2","react_default","a","createElement","react","Component","connect","state","_ref","app","players","BoardRow","children","onGame","text","type","setBingo","BoardCell","id","check","onCell","num","onClick","_","style","backgroundColor","mapDispatch","cell_num","_ref2","board","Board","addPlayer","onBoard","row","col","_this$props3","_id","Board_BoardScore","range","map","rowIndex","key","colIndex","Board_BoardCell","tick","flag","_this2","setState","App","className","components_Board","Button_default","createReducer","turn_id","_createReducer","Object","defineProperty","alert","immutable","$set","$merge","keys","length","_ref3","_ref4","_ref5","board_createReducer","cell_id","err","combineReducers","to2DArray","array1D","reduce","acc","cur","verticalArray","forEach","e","diagonalArray","data","push","left","right","checkBingo","innerArray","all","filter","combineEpics","action$","pipe","ofType","tap","R","Math","random","flatMap","concat","of","clearBingo","setBoard","store$","player_id","value","next_trun_id","apply","toConsumableArray","index","onCellSuccess","onBingo","_last","player","result","playerName","epicMiddleware","createEpicMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","run","epics","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.25e74c8e.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\n\nimport { connect } from 'react-redux'\n\nclass BoardScore extends Component {\n\n    componentDidUpdate() {\n\n        const { name, bingo } = this.props\n\n        console.log('did update (BoardScore)', name, bingo)\n\n    }\n\n    render() {\n\n        const { name, bingo } = this.props\n\n        return (\n            <Fragment>\n\n                <h1>{ name }</h1>\n        \n                빙고 : <span> { bingo } </span>\n        \n            </Fragment>\n        )\n\n    }\n\n}\n\nconst mapState = (state, { name }) => ({\n    bingo : state.app.players[name] && state.app.players[name].bingo\n})\n  \nconst mapDispatch = {\n\n}\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(BoardScore)","import React from 'react'\n\nexport default ({ children }) => (\n    <tr>\n        { children }\n    </tr>\n)","import * as type from '../constants'\n\nexport const onGame = (text) => ({\n    type: type.ON_GAME,\n    text\n})\n\nexport const onResult = () => ({\n    type: type.ON_RESULT\n})\n\nexport const addPlayer = (name) => ({\n    type: type.ADD_PLAYER,\n    name\n})\n\nexport const setTurn = (id) => ({\n    type: type.SET_TURN,\n    id\n})\n\nexport const setBingo = (name, bingo) => ({\n    type: type.SET_BINGO,\n    name,\n    bingo\n})\n\nexport const clearBingo = (name) => ({\n    type: type.CLEAR_BINGO,\n    name\n})","/* app */\n\nexport const ON_GAME = '[app] 🚀 onGame'\nexport const ON_RESULT = '[app] 🚀 onResult'\n\nexport const ADD_PLAYER = '[app] 🎁 addPlayer'\nexport const SET_TURN = '[app] 🎁 setTurn'\n\nexport const SET_BINGO = '[app] 🎁 setBingo'\nexport const CLEAR_BINGO = '[app] 🎁 clearBingo'\nexport const RESULT_BINGO = '[app] 🎁 resultBingo'\n\n/* board */\nexport const ON_BOARD = '[board] 🚀 onBoard'\nexport const SET_BOARD = '[board] 🎁 setBoard'\n\nexport const ON_CELL = '[board] 🚀 onCell'\nexport const ON_CELL_SUCCESS = '[board] 🎁 onCellSuccess'\nexport const ON_CELL_FAILURE = '[board] 🎁 onCellFailure'\n\nexport const ON_BINGO = '[board] 🚀 onBingo'","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\nimport { onCell } from '../../store/actions'\n\nclass BoardCell extends Component {\n\n\n    componentDidUpdate() {\n\n        const { name, id, check } = this.props\n\n        console.log('did update (BoardCell)', name, id, check)\n\n    }\n\n    render() {\n\n        const { name } = this.props\n        const { onCell, num, check } = this.props\n\n        return (\n            <td onClick={ _ => num && onCell(name, num) } style={ { backgroundColor : check ? 'red' : '' }}>\n\n                { num }\n\n            </td>\n        )\n    }\n\n}\n\nconst mapState = (state, { name, id }) => {\n\n    const { num, check } = state.board[name] && state.board[name].board[id] || { num : '', check : false }\n\n    return {\n        num,\n        check\n    }\n\n}\n  \nconst mapDispatch = {\n    onCell\n}\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(BoardCell)","import * as type from '../constants'\n\nexport const onBoard = (name, row, col) => ({\n    type: type.ON_BOARD,\n    name,\n    row,\n    col\n})\n\nexport const setBoard = (name, row, col, board) => ({ \n    type: type.SET_BOARD,\n    name,\n    row,\n    col,\n    board,\n})\n\nexport const onCell = (name, cell_num) => ({\n    type: type.ON_CELL,\n    name,\n    cell_num\n})\n\nexport const onCellSuccess = (name, cell_id) => ({\n    type: type.ON_CELL_SUCCESS,\n    name,\n    cell_id\n})\n\nexport const onCellFailure = (err) => ({\n    type: type.ON_CELL_FAILURE,\n    err\n})\n\nexport const onBingo = (name) => ({\n    type: type.ON_BINGO,\n    name\n})","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport BoardScore from './BoardScore'\n\nimport BoardRow from './BoardRow'\nimport BoardCell from './BoardCell'\n\nimport { addPlayer, onBoard } from '../../store/actions'\n\nimport { range } from 'rambda'\n\nclass Board extends Component {\n\n    componentDidMount() {\n\n        const { addPlayer, name } = this.props\n\n        addPlayer(name)\n\n    }\n\n    componentDidUpdate() {\n\n        const { onBoard, name, row, col } = this.props\n        \n        onBoard(name, row, col)\n\n    }\n\n    render() {\n\n        const { name, row, col } = this.props\n\n        let _id = 0\n\n        return (\n            <article>\n\n                <BoardScore name={ name } />\n\n                <table>\n    \n                    <tbody>\n\n                        { range(0, row).map((rowIndex) =>\n\n                            <BoardRow key={ rowIndex }>\n    \n                                { range(0, col).map((colIndex) =>\n                                    <BoardCell \n                                        key={ colIndex }\n                                        id={ _id++ }\n                                        name={ name }\n                                    />) }\n\n                            </BoardRow> )}\n    \n                    </tbody>\n    \n                </table>\n    \n            </article>\n        )\n\n    }\n\n}\n\nconst mapState = (state) => ({\n    tick : state.app.tick\n})\n  \nconst mapDispatch = {\n    addPlayer,\n    onBoard\n}\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(Board)","import React, { Component } from 'react'\n\nexport default class extends Component {\n\n    state = {\n        flag : true\n    }\n\n    render() {\n\n        const { flag } = this.state\n        const { onGame } = this.props\n\n        return (\n            <button onClick={ _ => {\n                flag && this.setState({ flag : false })\n                onGame()\n            }}>\n\n                { flag ? '게임시작' : '게임 재시작' }\n\n            </button>\n        )\n    }\n\n}","import React, { Component } from 'react'\n\nimport { connect } from 'react-redux'\n\nimport Board from './components/Board'\nimport Button from './components/Button'\n\nimport { onGame } from './store/actions'\n\nclass App extends Component {\n\n    render() {\n\n        const { onGame } = this.props\n\n        return (\n            <div className='App'>\n\n                <Board\n                    name='player1'\n                    row={ 5 }\n                    col={ 5 }\n                />\n\n                <Board\n                    name='player2'\n                    row={ 5 }\n                    col={ 5 }\n                />\n\n               <Button onGame={ onGame } />\n\n            </div>\n        )\n    }\n\n}\n\nconst mapState = _ => ({\n\n})\n  \nconst mapDispatch = {\n    onGame\n}\n\nexport default connect(\n    mapState,\n    mapDispatch\n)(App)","import immutable from 'immutability-helper'\nimport { createReducer } from 'redux-create-reducer'\n\nimport { ON_GAME, ADD_PLAYER, SET_TURN, SET_BINGO, CLEAR_BINGO } from '../constants'\n\nconst appState = {\n    tick : 0,\n    players : {},\n    turn_id : 0\n}\n\nexport default createReducer(appState, {\n    [ON_GAME](state, { text }) {\n\n        text && alert(text)\n\n        return immutable(state, {\n            tick : {\n                $set : state.tick + 1\n            }\n        })\n    },\n    [ADD_PLAYER](state, { name }) {\n\n        return immutable(state, {\n            players : {\n                $merge : {\n                    [name] : {\n                        id : Object.keys(state.players).length,\n                        bingo : 0\n                    }\n                }\n            }\n        })\n\n    },\n    [SET_TURN](state, { id }) {\n\n        return immutable(state, {\n            turn_id : {\n                $set : id\n            }\n        })\n\n    },\n    [SET_BINGO](state, { name, bingo }) {\n\n        return immutable(state, {\n            players : {\n                [name] : {\n                    bingo : {\n                        $set : bingo\n                    }\n                }\n            }\n        })\n\n    },\n    [CLEAR_BINGO](state, { name }) {\n\n        return immutable(state, {\n            players : {\n                [name] : {\n                    bingo : {\n                        $set :0\n                    }\n                }\n            },\n            turn_id : {\n                $set : 0\n            }\n        })\n\n    }\n})","import immutable from 'immutability-helper'\nimport { createReducer } from 'redux-create-reducer'\n\nimport { SET_BOARD, ON_CELL_SUCCESS, ON_CELL_FAILURE } from '../constants'\n\nconst boardState = {\n\n}\n\nexport default createReducer(boardState, {\n    [SET_BOARD](state, { name, row, col, board }) {\n\n        return immutable(state, {\n            [name] : {\n                $set : {\n                    row,\n                    col,\n                    board,\n                }\n            }\n        })\n\n    },\n    [ON_CELL_SUCCESS](state, { name, cell_id }) {\n\n        return immutable(state, {\n            [name] : {\n                board : {\n                    [cell_id] : {\n                        check : {\n                            $set : true\n                        }\n                    }\n                }\n            }\n        })\n\n    },\n    [ON_CELL_FAILURE](state, { err }) {\n\n        alert(err)\n\n        return state\n    }\n})","import { combineReducers } from 'redux'\nimport app from './app'\nimport board from './board'\n\nexport default combineReducers({\n    app,\n    board,\n})","import { range } from 'rambda'\n\nexport const to2DArray = (array1D, row, col) => {\n\n    let tick = 0\n\n    return range(0, row).reduce((acc, cur) => {\n        acc[cur] = range(0, col)\n                    .reduce((acc, cur) => {\n\n                        acc[cur] = array1D[tick++]\n\n                        return acc\n                    }, [])\n\n        return acc\n\n    }, [])\n\n}","export const verticalArray = board => board.reduce((acc, cur, rowIndex) => {\n\n    cur.forEach((e, colIndex) => {\n\n        !acc[colIndex] && (acc[colIndex] = [])\n\n        acc[colIndex][rowIndex] = e\n\n    })\n\n    return acc\n\n}, [])","export const diagonalArray = board => board.reduce((acc, cur) => {\n\n    cur.forEach((e, colIndex) => {\n\n        colIndex === 0 && acc.data[0].push(board[acc.left][acc.left])\n        acc.right === colIndex && acc.data[1].push(e)\n\n    })\n\n    acc.left++;\n    acc.right--;\n\n    return acc\n\n}, {\n    data : [[],[]],\n    left : 0,\n    right : board.length - 1\n})\n.data","import { all } from 'rambda'\n\nexport const checkBingo = board => board.map(innerArray => all(({ check }) => check, innerArray)).filter(e => e)","import { combineEpics } from 'redux-observable'\n\nimport { onBoard$ } from './board/onBoard'\nimport { onCell$ } from './board/onCell'\nimport { onBingo$ } from './board/onBingo'\nimport { onResult$ } from './board/onResult'\n\nexport default combineEpics(\n    onBoard$,\n    onCell$,\n    onBingo$,\n    onResult$\n)","import { ON_BOARD } from '../../constants'\nimport { setBoard, clearBingo } from '../../actions'\n\nimport { ofType } from 'redux-observable'\n\nimport * as R from 'rambda'\n\nimport { concat, of } from 'rxjs'\n\nimport { map, tap, flatMap } from 'rxjs/operators'\n\nexport const onBoard$ = action$ => \n    action$.pipe(\n        ofType(ON_BOARD),\n        tap(e => console.log(e)),\n        map(({ name, row, col }) => ({\n            name,\n            row, \n            col,\n            board : R.pipe(\n                R.map(e => ({ num : e, check : false })),\n                R.sort(_ => 0.5 - Math.random())\n            )\n            (R.range(1, row * col + 1 ))\n        })),\n        flatMap(({ name, row, col, board }) => \n            concat(\n                of(clearBingo(name)),\n                of(setBoard(name, row, col, board))\n            )\n        )\n    )\n","import { ON_CELL } from '../../constants'\nimport { onCellSuccess, setTurn, onCellFailure, onBingo } from '../../actions'\n\nimport { ofType } from 'redux-observable'\n\nimport { concat, of } from 'rxjs'\n\nimport { tap, flatMap } from 'rxjs/operators'\n\nexport const onCell$ = (action$, store$) => \n    action$.pipe(\n        ofType(ON_CELL),\n        tap(e => console.log(e)),\n        flatMap(({ name, cell_num }) => {\n\n            const player_id = store$.value.app.players[name].id\n            const { turn_id } = store$.value.app\n\n            const len = Object.keys(store$.value.app.players).length - 1\n            const next_trun_id = len > turn_id ? turn_id + 1 : 0\n\n            return concat(\n                ...(\n                    player_id === turn_id ?\n                    [\n                        ...Object.keys(store$.value.board)\n                            .map(name => {\n\n                                let cell_id = store$.value\n                                                    .board[name]\n                                                    .board\n                                                    .reduce((acc, cur, index) => {\n                                                        cur.num === cell_num && (acc = index)\n                                                    return acc\n                                                    }, 0)\n\n                                return concat(\n                                    of(onCellSuccess(name, cell_id)),\n                                    of(onBingo(name))\n                                )\n                            }),\n                        of(setTurn(next_trun_id)),\n                    ]\n                    :\n                    [\n                        of(onCellFailure(`${ name }님의 차례가 아닙니다.`))\n                    ]\n                )\n            )\n        })\n    )\n","import { ON_BINGO } from '../../constants'\nimport { setBingo, onResult } from '../../actions'\nimport { to2DArray, checkBingo, verticalArray, diagonalArray } from './internal'\n\nimport { ofType } from 'redux-observable'\n\nimport { concat, of } from 'rxjs'\n\nimport { map, tap, flatMap } from 'rxjs/operators'\n\nexport const onBingo$ = (action$, store$) => \n    action$.pipe(\n        ofType(ON_BINGO),\n        tap(e => console.log(e)),\n        map(({ name }) => ({\n            name,\n            board : to2DArray(\n                        store$.value.board[name].board,\n                        store$.value.board[name].row,\n                        store$.value.board[name].col\n                    )\n        })),\n        map(({ name, board }) => ({\n            name,\n            bingo : checkBingo(board).length + \n                    checkBingo(verticalArray(board)).length + \n                    checkBingo(diagonalArray(board)).length\n        })),\n        flatMap(({ name, bingo }) => {\n\n            const player = name => store$.value.app.players[name]\n            const _last = Object.keys(store$.value.app.players).length - 1\n\n            return concat(\n                ...[\n                    of(setBingo(name, bingo)),\n                    _last === player(name).id && of(onResult())\n                ].filter(e => e)\n            )\n\n        })\n    )\n","import { ON_RESULT } from '../../constants'\nimport { onGame } from '../../actions'\n\nimport { ofType } from 'redux-observable'\n\nimport { map, tap } from 'rxjs/operators'\n\n\nexport const onResult$ = (action$, store$) => \n    action$.pipe(\n        ofType(ON_RESULT),\n        tap(e => console.log(e)),\n        map(() => {\n\n            const result = Object.keys(store$.value.app.players).reduce((acc, playerName) => {\n\n                store$.value.app.players[playerName].bingo > 4 && acc.push(playerName)\n                return acc;\n\n            }, [])\n\n            return result.length \n                ? \n                onGame(`${ result } ${ result.length > 1 ? '님과 무승부입니다.' : '님이 빙고를 완성했습니다.' }`) \n                : { type: null }\n\n        })\n    )","import { createStore, applyMiddleware, compose } from 'redux'\nimport { createEpicMiddleware } from 'redux-observable'\n\nimport reducers from './reducers'\nimport epics from './epics'\n\n\nconst epicMiddleware = createEpicMiddleware()\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(epicMiddleware)\n    )\n)\n\nepicMiddleware.run(epics)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={ store }>\n        <App />\n    </Provider>\n, document.getElementById('root'))"],"sourceRoot":""}